<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>dev.vality</groupId>
        <artifactId>service-parent-pom</artifactId>
        <version>1.0.14</version>
    </parent>

    <artifactId>trusted-tokens-manager</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>15</java.version>
        <server.port>8022</server.port>
        <management.port>8023</management.port>
        <exposed.ports>${server.port} ${management.port}</exposed.ports>
        <dockerfile.base.service.tag>1d57d77a38eb7b351eca3c1a9a3e45ec441ed9aa</dockerfile.base.service.tag>
        <dockerfile.registry>${env.REGISTRY}</dockerfile.registry>
        <trusted-tokens-proto.version>1.7-6d29f86</trusted-tokens-proto.version>
        <fraudbusters-proto.version>1.108-0800fde</fraudbusters-proto.version>
        <machinegun-proto.version>1.21-e4784ab</machinegun-proto.version>
        <payout-manager-proto.version>1.35-dbed280</payout-manager-proto.version>
        <testcontainers-annotations.version>1.4.0</testcontainers-annotations.version>
        <woody.version>1.0.0</woody.version>
    </properties>

    <dependencies>
        <!--ValityDev-->
        <dependency>
            <groupId>dev.vality.woody</groupId>
            <artifactId>woody-thrift</artifactId>
        </dependency>
        <dependency>
            <groupId>dev.vality</groupId>
            <artifactId>shared-resources</artifactId>
        </dependency>
        <dependency>
            <groupId>dev.vality</groupId>
            <artifactId>trusted-tokens-proto</artifactId>
            <version>${trusted-tokens-proto.version}</version>
        </dependency>
        <dependency>
            <groupId>dev.vality</groupId>
            <artifactId>kafka-common-lib</artifactId>
        </dependency>
        <dependency>
            <groupId>dev.vality</groupId>
            <artifactId>machinegun-proto</artifactId>
            <version>${machinegun-proto.version}</version>
        </dependency>
        <dependency>
            <groupId>dev.vality</groupId>
            <artifactId>fraudbusters-proto</artifactId>
            <version>${fraudbusters-proto.version}</version>
        </dependency>
        <!--spring-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.hibernate</groupId>
                    <artifactId>hibernate-validator</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka</artifactId>
        </dependency>

        <!--third party-->
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-core</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.basho.riak</groupId>
            <artifactId>riak-client</artifactId>
            <version>2.1.1</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-web</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-streams</artifactId>
        </dependency>

        <!--test-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>dev.vality</groupId>
            <artifactId>testcontainers-annotations</artifactId>
            <version>${testcontainers-annotations.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>dev.vality</groupId>
            <artifactId>payout-manager-proto</artifactId>
            <version>${payout-manager-proto.version}</version>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>${project.build.directory}/maven-shared-archive-resources</directory>
                <targetPath>${project.build.directory}</targetPath>
                <includes>
                    <include>Dockerfile</include>
                </includes>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>${project.build.directory}/maven-shared-archive-resources</directory>
                <filtering>true</filtering>
                <excludes>
                    <exclude>Dockerfile</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-remote-resources-plugin</artifactId>
                <version>1.6.0</version>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.shared</groupId>
                        <artifactId>maven-filtering</artifactId>
                        <version>1.3</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <resourceBundles>
                        <resourceBundle>dev.vality:shared-resources:${shared-resources.version}</resourceBundle>
                    </resourceBundles>
                    <attachToMain>false</attachToMain>
                    <attachToTest>false</attachToTest>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>process</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
